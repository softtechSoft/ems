4/19	-	単体テスト仕様書
			ーCreateTable.sqlに書く必要なSql文は、新しい書き直した文書だけですか？あるいは、
				いつもデータベースに書いてるのをCreateTable.sqlにもupdateする必要ありますか？









-------------------

4/17週予定：単体テスト
　　　　　　仕様書作成、実施

（4/15）⇒詳細設計書はがOKです。
　　ソースは、こちらから修正しました。疎通して見てください。
　　修正内容
　　　①サービス層、要らない定義などを削除。
　　　②ArrayListの使い方はまだ把握してないようです。補足しました。
　　　Gitの履歴を確認、比較しながら、勉強してください。

4/17-4/18単体テスト仕様書作成
　単体テスト仕様書フォマード：DOC\単体テスト\（TEMPLATE）EMS(EMSM)_単体テスト仕様書_経費管理.xlsx
　　コピーして利用してください。

    	ー単体テストについて書き方は参考種類はありますか？
    	ーems　を実行したら社員情報変更は入ることできずエラーになっています。
    	ー単体テストの項目についての意味もおねがいします。



4/18  -  単体テスト仕様書作成
		ー単体テスト書くときは詳細設計書の各処理のテスト結果（あるいは）実行して各処理のテスト結果
		　どっちらを書くのですか？
		ー単体テストのテストケースとテストデータ書きました。確認と必要な所の指導よろしくお願いします。
		ーテストケースにまた書く必要がある項目があれば教えてくれるようおねがいします・
⇒　①DEBUGはどうですか？使えるようになりましたか？
　　②詳細設計書を指摘しました。対応をお願いします。
　　　詳細設計、コーディングもテストケースと相違の場合、テストケースは基準として修正してください。
　　③CreateTable.sql中、m_departmentとm_eptype　部分、エラーでるはずので、直してください。






==================================================================
4/3～4/5：
予定：詳細設計_EMS_社員情報変更.xlsxの作成（4/1現状、未着手）
毎日連絡：
　4/3：
　　進捗：例：○○を作成しました。


　　質問1：例：登録処理はどうのようにサービスの関数を呼び出すか
　　回答1：（郭などが夜に回答する）


　　質問1X：例：登録処理はどうのようにサービスの関数を呼び出すか
　　回答1X：（郭などが夜に回答する）

 （郭） ⇒　TODO1～TODO4を記載しました。対応してください。
  　　TO勉強1、TO勉強2も記載をしました。以前勉強した資料などを再確認し、身に付けてください。

4/4：
　　進捗：例：○○を作成しました。


　　質問1：例：登録処理はどうのようにサービスの関数を呼び出すか
　　回答1：（郭などが夜に回答する）

4/5:
 予定：TODO→メッセージ→サービス層→DAO層の順に進んでください。


4/6～4/7　詳細設計
　予定：TODO→メッセージ→サービス層→DAO層の順に進んでください。


   質問　：　画面表示・制御詳細の制御には社員情報項目全部書くじゃなくって、
   　　　　　どのような項目だけ書くのですか？
   回答：２）画面項目表示に書いたように、
   　　　　　項目編集リスト　シートは、全部項目を書く所です。
   　　　３）制御　に下記内容は
   　　　　　画面上、各項目間お互いに影響する内容です。

   		ー	はい、分かりました。ありがとうございます。


   質問　：　項目編集リストのI/Oの場合　どうして社員IDだけは　I　になりのですか？
   　　　　　そしてI/Oの役割はどう理解したらいいですか？
　　⇒画面から見ると
　　　　　社員IDはテーブルからデータを取得して、画面にInputし表示するため、Iです。
　　　　　かつ
　　　　　社員IDは更新できない項目ですので、Iだけになり。
　　　　　他の項目は画面上変更可能だし、DBも更新するため、IOです。

   		ー	はい、分かりました。ありがとうございます。


   質問　：　EmployeeEditController.java　77行
   　　　　　どのような場合に　社員情報更新失敗結果は　出るのですか？
　　⇒Line77：employeeEditService.transferUIToPara(employeeEditBean)
　　　　　　DBエラーが発生しない。
　　　　　かつ　大きなエラーが発生しない考えがあり、例外も考えていない。
　　　　　　しかし、RuntimeExceptionが発生する可能があります、
　　　　　　その場合、直ちに処理終了し、画面上システムエラーが表示される。
　　　　　DB更新は　Line78の　int num = employeeEditService.updateEmployeeAll(map);　です。
　　　　　Line80からLine84までのように、numは1以外はエラーです。

   		ー	はい、分かりました。ありがとうございます。



   質問　：　EmployeeEditServiceImpl.java　　59行　～
   　　　　　サービス層に社員情報それぞれの呼び出すメソッドの説明は書く必要になりますか？
　　⇒　全ソース、全メソッドの説明は必要です。


   進捗　：　詳細設計書終わりました。確認と間違ったところの説明もお願い致します。
   ⇒　　　サービス層とDAO層は全般的にやり直すかな。詳細設計諸のTODOを確認してください。



　　4/7	:

	サービス層
	質問	：	DBから画面用へ変更する処理の書き方正しいですか？（３４行　～　）
				正しくない場合は修正方も教えてくれるようおねがいします。

　　⇒　　　　３４行？
	質問	：	社員タイプリストと部門リストの書き方のチェックもお願いします。
　　⇒　　　　現状チェックは必要がない。

	質問	：	サービス層とDAO層は全般的にやり直す事なら、どうやり直したらいいですか？
　　⇒サービス層とDAO層を修正しました。
　　　　消し線赤、青い字で区別している。
　　　　
　　　　
	DAO層
	質問	：	TODO20230426-02ー本画面のみから使うSQLを記載してください　と書いてありますが、
				その処理は社長が書いてた文書ですので、説明お願い致します。
　　⇒サービス層とDAO層を修正しました。
　　　　消し線赤、青い字で区別している。


4/10週予定：社員タイプリスト、部門リストのマスタ化


   4/10   質問	：	DAO層に書くときEmlpoyeeEditMapper.javaあるけどEmployeeMapper.javaとEmployeeMapper.xml
					を使うのはどうしてですか？
  ⇒ MyBatisから決めた事です。
  　EmlpoyeeEditMapper.java　がないと、サービス層からSQLの実行ができない。
  　EmployeeMapper.xmlがないと、どんなSQL文を実行するかは分からないです。



		  質問	：	サービス層のメソッド名にpublicとかprivateとか書いてあるのですが、書いてないところもあるので、
		  			何が違いますか？
　⇒Javaの資料を確認してください。
　　デフォルトはPublicだけ？


		  進捗	：	マスタテーブル（社員タイプテーブル、部門テーブル）を新規作成しましたが、
		  			テーブルのデータ情報は何を入れるべきが分からないので、一応リストだけで作成しました。
　　　⇒リストだけでもOKです。
　　　　DB定義書、CreateTable.sqlも同期更新しください。

-------------------

   4/11　予定：社員タイプテーブル、部門テーブルを利用して、ハードコーディング部分を改修する。
   　サービス層のmkEmployeeType、mkDepartmentの所

   				ー	ハードコーディング部分の改修は出来ませんでした。

   				ー	CreateTable.sqlを更新しました。


   質問		：	詳細設計書のサービス層のメソッド名にpublicとprivateも入れて書いてありますので、
   				書いてないところもあリますから、これからはどのような書き方で書いたらいいですか？
   ⇒ 基本、全部書いてください。
   　　今回、ソースから詳細設計書を逆作成するので、ソースには書いてなければ、詳細設計書にも書かなくでもOKです。


-------------------

 4/12　予定：①テーブル定義書も（ems\DOC\DB編\社内管理_DB編.xlsx）修正してください。
 				ー	社内管理_DB編.xlsxにマスタ＿部門とマスタ＿社員タイプファイルを作りました。
  ⇒ PKの記入してください。

 　　　　　　②ハードコーディング部分を改修する
 				ー改修中です。まだ終わってないです。
  ⇒　4/13　にも引き続き改修してください。
  		ー	社員タイプのEptypeMapper.xml 、EptypeMapper.java を作ってEmployeeEditServiceImpl.java と
  			EmployeeEditService.java に改修しました。ご指導よろしくお願いします。

  ⇒①ems\DOC\DB編\社内管理_DB編.xlsxのマスタ＿部門、マスタ＿社員タイプにおけるカラムの中どのカラムがPK
  　　かを記入してください。
  　②EptypeMapper.javaは問題ない
  　③Beanクラスの使い方：
  　　1)画面データを格納用Beanは
  　　　　com.softtech.actionFormパケージ
  　　2)DBデータを格納用Beanは
  　　　　com.softtech.entityパケージ
  　　3)その他は
  　　　　com.softtech.comパケージ　に属する
  　　　EptypeInfoはDBデータを格納用Beanですので、com.softtech.entityへ移動してください。
  　　　ただ他のクラスから使っている場合、別名称のクラスを新規作成してください。
　　　４）詳細設計_emsm_福祉情報リスト.xlsも修正しましたか？
　　　　この場合、必ず修正履歴に記載してください。
　　　　じゃないと、どこにどのように修正したかは分からない。
　　　５）今勉強中で、いいですが、現場に入ったら絶対にエラー状態のソースをGitにPushしないでください。

  　　他もある。。。
  　　やっぱり、詳細設計から考え方がいい？

  　4/14にも改修作業をしてください。
     やっぱり、詳細設計_EMS_社員情報変更.xlsxを修正しました。
     　処理詳細-DAO層 シート　の赤字部分
     　処理詳細-サービス層　シート　の色付ける部分
     だけコーディングすれば、社員タイプのマスト化は完了。

     部門マスタかも同じ対応。


    	ー　Mapper　に　DepartmentMapper.xml 、DepartmentMapper.java ,　entity にDepartment.java と EmployeepType.java
    	を作ってEmployeeEditServiceImpl.java にも改修しました。なんかまだエラーあるみたいです。
    	ー　詳細設計書にも修正しました。よろしくお願いいたします。
  　

--------------------------------------------------------------------
2月
　木3回、土４回
　総7回
　
　目標：EMS-社員変更
　　　　障害対応(エラー時、社員タイプ、所属部門の候補はなくなる）
　　　　
　内容：
　　　①HTTP/TCP/IP/MVC/工程　概念の理解
　　　　HTTP-TCPIP.docx
　　　　
　　　　MVC:
　　　　 https://system-kaihatu.com/archives/3204#:~:text=MVC%E3%83%A2%E3%83%87%E3%83%AB%E3%81%A8%E3%81%AF%E3%80%81%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0,%E3%83%A2%E3%83%87%E3%83%AB%E3%81%A8%E5%91%BC%E3%81%B0%E3%82%8C%E3%81%BE%E3%81%99%E3%80%82
　　　　
　　　　Model   -- View   --- Control
　　　　
　　　　開発工程：
　　　　　計画--
　　　　　　　　　　　　　　　｜-----------------教育範囲-----------------------ーーーーーーーーーーーーー｜
　　工程：　　要件定義　　→　基本設計　　→　詳細設計　　　→製造（コーディング）→単体テスト　　　　→結合テスト　　　→他のテスト（受入テスト、業務テスト）→リリース→保守
　　成果物：　要件定義書　　　基本設計書　　　詳細設計書　　ソース　　　　　　　　　単体テスト仕様書　　結合テスト仕様書　他のテスト仕様書　　　　　　　　　　　
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.HTML 　　　　　　　　エビデンス　　　　　エビデンス　　　　エビデンス
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.js　　　　　　　　　JUNITソース
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.java
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.xml

②HTML_CSS_JS入門.xlsx　13日週
　JS:
　①JavaScriptの基本事項
　②数値：数値リテラルの記述方法
　③文字列
　④変数
　⑤演算子
　⑥繰り返し処理
　⑦条件分岐
　⑧オブジェクト　プロパティの値の取得と新しい値の代入
　⑨関数
　⑩イベント処理：
　　clickイベント：マウスがクリックされたとき
　　loadイベント：ページの読み込みが完了したとき
　　changeイベント：フォームや選択メニューが変更されたとき


SpringBoot入門.docx　　20日週
 各アノテーション
 　①@Controller/@Service/@Mapper
 　②@RequestMapping/@PostMapping
 　③@Autowired
　　
Thymleaf入門.docx　　　20日週
　①タグ
　　＜Form　th:action　th:object…
　　　　各タグ
　　/>
　②Controller層と連携、データ転送
　　連携：
　　　例：更新ボタンをクリックすると、どうやてController層の関数と連携する
　　　　　（--アノテーション）
　　データ転送：
　　　　th:objectで利用するなど

MyBatis入門.docx　　　27日週
　①Mapper　Interface　定義できる
　②XML文で、SQLを書ける
　③用語集：

　④EMS　障害対応開始　　27日週
　　社員情報変更画面の障害
　　　HTML:src/main/resources/templates/ems/employeeEdit.html
　　　Controller:src/main/java/com/softtech/controller/EmplyeeEditController.java

    親画面：
    　HTML:src/main/resources/templates/main/main.html
           画面、左側の「社員情報変更」リンクをクリックすると、
           　　　システムの”/employeeedit”へリクエストをする。

　　障害の事象：
　　　社員情報テーブル（employee)生年月日（birthday),入社日（joindate）がからの場合、
　　　エラー発生する。
　
　⑤テーブル定義書
　　1)ems/DOC/DB編/社内管理_DB編.xlsx
    　　Eclipseの外で開く
    2)CreateTable.sql
    　テーブルをDBに投入するSQL
    上記１）、２）は基本的に参照のみ。修正する必要な場合、リーダーに相談して進み。
    　社内管理_DB編.xlsxを変更する場合、必ずCreateTable.sqlも同期に修正する。

　⑥IDE系（GitHub（バージョン管理ツール））
　　Commit＆PUSH：
　　　①PULL
　　　　emsプロジェクトを右クリック　→　チーム　→　プル(U)
　　　②Commit＆PUSH
　　　　Gitステージング画面　→　修正した内容を「ステージされていない変更」から「ステージされた変更」
　　　　　に移動　→　　コミットメッセージに適当な内容を記載　→「コミットおよびプッシュ」ボタンをクリック

3月
　木5回、土3回
　総8回

3/4
　障害の事象の説明済み
　デバッグ方法説明済み
　①ブレークポイント設定方法
　②行単位実行　（F6）
　③次のブレークポイントまで実行（F8）
　④変数の確認および値の修正方法
　⑤式の値確認方法（ウオッチ）

　EMS流れ
　　初期表示
　　　親画面→コントロール層の初期表示メソッド→サービス層→MyBatisでデータ取得→データ変換→画面に渡す
　　更新
　　　画面データ→コントロール層の処理メソッドに渡す→...

3/6 週
　障害を直す。（生年月日、入社日）
   employeeEdit.html→EmplyeeEditController.java→EmployeeEditServicelmpl.java→EmployeeMapper.java→EmployeeMapper.xml

3/20
  詳細設計書作成

　目標：EMS-社員変更　改修
　　　（テーブル定義書：社内管理_DB編.xlsx
　　　　　　社員情報テーブルの必須カラム通りにDBを変更する。）
　　　　　　
　　①社員ID、氏名の間にメールアドレス項目を追加、変更不可
　　②社員タイプ、所属部門をマスタ化
　　③変更可能項目は全部必須項目とする
　　
　　詳細設計、単体テストも
　　

