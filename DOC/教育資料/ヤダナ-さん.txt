2月
　木3回、土４回
　総7回
　
　目標：EMS-社員変更
　　　　障害対応(エラー時、社員タイプ、所属部門の候補はなくなる）
　　　　
　内容：
　　　①HTTP/TCP/IP/MVC/工程　概念の理解
　　　　HTTP-TCPIP.docx
　　　　
　　　　MVC:
　　　　 https://system-kaihatu.com/archives/3204#:~:text=MVC%E3%83%A2%E3%83%87%E3%83%AB%E3%81%A8%E3%81%AF%E3%80%81%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0,%E3%83%A2%E3%83%87%E3%83%AB%E3%81%A8%E5%91%BC%E3%81%B0%E3%82%8C%E3%81%BE%E3%81%99%E3%80%82
　　　　
　　　　Model   -- View   --- Control
　　　　
　　　　開発工程：
　　　　　計画--
　　　　　　　　　　　　　　　｜-----------------教育範囲-----------------------ーーーーーーーーーーーーー｜
　　工程：　　要件定義　　→　基本設計　　→　詳細設計　　　→製造（コーディング）→単体テスト　　　　→結合テスト　　　→他のテスト（受入テスト、業務テスト）→リリース→保守
　　成果物：　要件定義書　　　基本設計書　　　詳細設計書　　ソース　　　　　　　　　単体テスト仕様書　　結合テスト仕様書　他のテスト仕様書　　　　　　　　　　　
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.HTML 　　　　　　　　エビデンス　　　　　エビデンス　　　　エビデンス
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.js　　　　　　　　　JUNITソース
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.java
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*.xml

②HTML_CSS_JS入門.xlsx　13日週
　JS:
　①JavaScriptの基本事項
　②数値：数値リテラルの記述方法
　③文字列
　④変数
　⑤演算子
　⑥繰り返し処理
　⑦条件分岐
　⑧オブジェクト　プロパティの値の取得と新しい値の代入
　⑨関数
　⑩イベント処理：
　　clickイベント：マウスがクリックされたとき
　　loadイベント：ページの読み込みが完了したとき
　　changeイベント：フォームや選択メニューが変更されたとき


SpringBoot入門.docx　　20日週
 各アノテーション
 　①@Controller/@Service/@Mapper
 　②@RequestMapping/@PostMapping
 　③@Autowired
　　
Thymleaf入門.docx　　　20日週
　①タグ
　　＜Form　th:action　th:object…
　　　　各タグ
　　/>
　②Controller層と連携、データ転送
　　連携：
　　　例：更新ボタンをクリックすると、どうやてController層の関数と連携する
　　　　　（--アノテーション）
　　データ転送：
　　　　th:objectで利用するなど

MyBatis入門.docx　　　27日週
　①Mapper　Interface　定義できる
　②XML文で、SQLを書ける
　③用語集：

　④EMS　障害対応開始　　27日週
　　社員情報変更画面の障害
　　　HTML:src/main/resources/templates/ems/employeeEdit.html
　　　Controller:src/main/java/com/softtech/controller/EmplyeeEditController.java

    親画面：
    　HTML:src/main/resources/templates/main/main.html
           画面、左側の「社員情報変更」リンクをクリックすると、
           　　　システムの”/employeeedit”へリクエストをする。

　　障害の事象：
　　　社員情報テーブル（employee)生年月日（birthday),入社日（joindate）がからの場合、
　　　エラー発生する。
　
　⑤テーブル定義書
　　1)ems/DOC/DB編/社内管理_DB編.xlsx
    　　Eclipseの外で開く
    2)CreateTable.sql
    　テーブルをDBに投入するSQL
    上記１）、２）は基本的に参照のみ。修正する必要な場合、リーダーに相談して進み。
    　社内管理_DB編.xlsxを変更する場合、必ずCreateTable.sqlも同期に修正する。

　⑥IDE系（GitHub（バージョン管理ツール））
　　Commit＆PUSH：
　　　①PULL
　　　　emsプロジェクトを右クリック　→　チーム　→　プル(U)
　　　②Commit＆PUSH
　　　　Gitステージング画面　→　修正した内容を「ステージされていない変更」から「ステージされた変更」
　　　　　に移動　→　　コミットメッセージに適当な内容を記載　→「コミットおよびプッシュ」ボタンをクリック




2月　4日　　　　ems


3月
　木5回、土3回
　総8回

　目標：EMS-社員変更　改修
　　　（テーブル定義書：社内管理_DB編.xlsx
　　　　　　社員情報テーブルの必須カラム通りにDBを変更する。）
　　　　　　
　　①社員ID、氏名の間にメールアドレス項目を追加、変更不可
　　②社員タイプ、所属部門をマスタ化
　　③変更可能項目は全部必須項目とする
　　
　　詳細設計、単体テストも
　　

